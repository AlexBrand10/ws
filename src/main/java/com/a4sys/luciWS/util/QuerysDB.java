package com.a4sys.luciWS.util;

import java.lang.reflect.Field;

/**
 * @author Martin Morones
 * */
@SuppressWarnings("unused")
public class QuerysDB {
	
	public static final String GET_DATA_CONFIRMACION_WITH_TOKEN = "select cn.idconfirmacionnotificacion,cn.folio,cn.fechaevento fechaCreacionToken, cn.fechaevento + tcn.diasvigenciaporenvio AS fechaVencimientoToken, CASE WHEN sysdate < (cn.fechaevento + tcn.diasvigenciaporenvio ) THEN 'true' ELSE 'false' END TokenEstaVigente,tcn.diasvigenciaporenvio,tcn.enviospermitidos,tcn.idtiponotificacion ,case when emailengine.gettokendecrypt({claveAutenticacion},cn.idconfirmacionnotificacion) = cn.folio then 'true' else 'false' end  tokenEsValido,case when cn.confirmacion in ('C','N') then  'true' else 'false' end yaConfirmado from tblSolicitudes s  join tblconfirmacionnotificacion cn on s.folio =  cn.folio join tblcfgtiponotificaciones tcn on tcn.idtiponotificacion = cn.idtiponotificacion join dicProductos p on p.idcfgnotificacion  = tcn.idcfgnotificacion and p.idProducto =  s.idProducto where cn.idconfirmacionnotificacion = {idConfirmacion} order by cn.folio";
	public static final String GET_DATA_CONFIRMACION = "select cn.idconfirmacionnotificacion,cn.folio,cn.fechaevento fechaCreacionToken, cn.fechaevento + tcn.diasvigenciaporenvio AS fechaVencimientoToken, CASE WHEN sysdate < (cn.fechaevento + tcn.diasvigenciaporenvio ) THEN 'true' ELSE 'false' END TokenEstaVigente,tcn.diasvigenciaporenvio,tcn.enviospermitidos,tcn.idtiponotificacion ,case when emailengine.gettokendecrypt(cn.claveValidacion,cn.idconfirmacionnotificacion) = cn.folio then 'true' else 'false' end  tokenEsValido,case when cn.confirmacion in ('C','N') then  'true' else 'false' end yaConfirmado from tblSolicitudes s  join tblconfirmacionnotificacion cn on s.folio =  cn.folio join tblcfgtiponotificaciones tcn on tcn.idtiponotificacion = cn.idtiponotificacion join dicProductos p on p.idcfgnotificacion  = tcn.idcfgnotificacion and p.idProducto =  s.idProducto where cn.idconfirmacionnotificacion = {idConfirmacion} order by cn.folio";
	public static final String GET_COUNT_CONFIRMACION = "select count(cn.idconfirmacionnotificacion)+1 res from tblSolicitudes s JOIN tblconfirmacionnotificacion cn ON s.folio = cn.folio JOIN tblcfgtiponotificaciones tcn ON tcn.idtiponotificacion = cn.idtiponotificacion JOIN dicProductos p ON p.idcfgnotificacion = tcn.idcfgnotificacion AND p.idProducto  = s.idProducto WHERE s.folio = {folio} and tcn.idtiponotificacion = {idTipoNotificacion} and cn.confirmacion = 'N'  ";
	public static final String SEND_NOTIFICATION = "select EmailEngine.SendNotification({folio}, {idTipoNotificacion},1) res from dual";
	public static final String GET_SUBURBS_BY_CP = "select cpc.cpostal, initCap(cpc.colonia) colonia, initCap(m.municipio) municipio, m.idMunicipio, initCap(e.estado) estado from tblcpostalcolonias cpc  join tblmunicipiocpostal mcp on mcp.cpostal = cpc.cpostal join dicmunicipios m on mcp.idMunicipio = m.idmunicipio join dicEstados e on e.idEstado = m.idestado where cpc.cpostal = {cp} order by cpc.colonia";
	public static final String UPDATE_CONFIRMACION_N = "update tblconfirmacionnotificacion set confirmacion = {confirmacion} where idconfirmacionnotificacion = {idConfirmacion}";
	public static final String UPDATE_CONFIRMACION_C = "update tblconfirmacionnotificacion set confirmacion = {confirmacion},fechaRecibido = sysdate where idconfirmacionnotificacion = {idConfirmacion}";
	public static final String GET_CFG_MAIL_ADDRESS = "select clienteescontratante, decode(domclienteesdomcontratante,null,'N',domclienteesdomcontratante) DOMCLIENTEESCONTRATANTE, decode(DOMCORRESPONESDOMCONTRATANTE,null,'N',DOMCORRESPONESDOMCONTRATANTE) DOMCORRESPONESDOMCONTRATANTE, decode(DOMCORRESPONDENCIAESDOMCLIENTE,null,'N',DOMCORRESPONDENCIAESDOMCLIENTE) DOMCORRESPONDENCIAESDOMCLIENTE from tblcontrolsolicitudes where folio = {folio}";
	public static final String SAVE_HISTORY_APPLICATION = "Insert Into TblHistoriaSolicitudes (Folio,IDEstadoSolicitud, IDEventoHistorico, IDUsuarioResponsable, FechaEvento) Values({folio}, {idEstadoSolicitud}, {idEventoHistoricoSol}, {idUsuario}, sysdate )";
	public static final String GET_DATA_FOR_HISTORY= "select s.folio,s.idestadosolicitud  from tblconfirmacionnotificacion  c  join tblsolicitudes s on s.folio =  c.folio  where idconfirmacionnotificacion =  {idConfirmacion}";
	public static final String GET_FTP = "select ip,puerto,ruta,usuario,contrasenia,rutaGrabaciones from dicsftps where idsftp = {idsftp}";
	public static final String GET_ID_LAYOUT = "SELECT distinct p.idslayout, layout,  r.remesaExport FROM tblsolicitudes s JOIN dicproductos p ON s.idproducto = p.idproducto JOIN diclayouts l ON TO_CHAR(l.idlayout) = p.idslayout join tblremesasexport r on r.idRemesaExport = s.idRemesaExport WHERE s.idRemesaExport ={idRemesaExport}";
	public static final String GET_ENCABEZADO_LAYOUT = "SELECT DESCRIPCION TITULO FROM tblCfgLayOut WHERE idLayOut = {idLayOut} ORDER BY ORden";
	public static final String GET_LAYOUTS = "SELECT rs.Folio, TO_CHAR(rs.DataLayOut) LayOut,r.remesaexport,c.campana FROM tblRemesasExportSolicitudes rs join tblremesasexport r on r.idRemesaExport = rs.idremesaExport join tblSolicitudes s on s.folio = rs.folio join diccampanas c on c.idCampana = s.idCampana WHERE rs.idRemesaExport = {idRemesa} AND rs.Procesado        = 'S' AND rs.idLayOut         = {idLayOut} ORDER BY rs.Folio";
	public static final String GET_FOLIOS_BY_REMESA ="SELECT folio FROM tblSolicitudes  WHERE idremesaexport = {idRemesa}";
	public static final String TEST_POLIZA_RSA = "select count(*) TOTAL from TBLSOLICITUDES s join TBLPOLIZAS p on s.FOLIO = p.FOLIO join TBLDOMICILIOS d on p.IDCLIENTE = d.IDCLIENTE join DICMUNICIPIOS m on d.IDMUNICIPIO = m.IDMUNICIPIO join dicestados es on m.IDESTADO = es.IDESTADO join TBLCLIENTES c on p.IDCLIENTE = c.IDCLIENTE left join dicpaises pa on c.IDPAIS = pa.IDPAIS join TBLCOBROSPOLIZA cp on s.FOLIO = cp.FOLIO join DICCFGPOLIZA rsa on rsa.ofi = 72 join DICPRODUCTOS dp on s.IDPRODUCTO = dp.IDPRODUCTO where cp.IDRESULTADOCOBRO = 1 AND s.folio = {folio} group by s.folio, p.IDPOLIZA, c.NOMBRE || ' ' || c.APATERNO || ' ' || c.AMATERNO, d.CALLE || ' ' || d.NOEXTERIOR || ', ' || d.COLONIA || ', ' || m.MUNICIPIO || ', ' || es.ESTADO || ' ' || d.CPOSTAL || ', ' || pa.PAIS, c.RFC, p.FECHAVENTA, dp.PRECIOPRODUCTO, rsa.AGENTE, rsa.BONIFICACION, rsa.DEDUCIBLES, rsa.DESCRIPCION, rsa.FORMAPAGO, rsa.GASTOEXPEDICION, rsa.IVA, rsa.MONEDA, rsa.OFI, rsa.PRIMANETA, rsa.RAMO, rsa.SUMASASEGURADAS, rsa.TASAFINANCIAMIENTO, rsa.TOTAL";
	public static final String GET_REPORT_PATH = "SELECT rutaReporte, reporte,idsftp , tipo  FROM dicreportes WHERE idReporte = {idReporte}";
	public static final String GET_AMBIENTE_ETIQUETA_ID = "select SUBSTR(estiloambiente, 1, 1) ESTILO from TBLCFGSISTEMA where activo = 'S'";
	public static final String GET_FOLIOS_AND_NAMES_FOR_BAT = "select s.folio,s.idexternosolicitud, REPLACE(c.nombre,' ','_')||'_'||c.apaterno||(case when c.amaterno is null then '' else '_'||c.amaterno end) nombreCompleto from tblSolicitudes s  join tblClientes c on c.idCliente = s.idCliente where s.idremesaexport = {idRemesa}";
	public static final String GET_MAX_BENEFICIARIOS = "select max(maxBeneficiarios) max from ( select s.folio, count(s.folio) maxBeneficiarios from tblSolicitudes  s join tblbeneficiarios b on b.idcliente = s.idCliente join dicparentescos p on b.idparentesco = p.idparentesco where s.idremesaexport = {idRemesa} group by s.folio )";
	public static final String GET_BENEFICIARIOS = "SELECT s.folio, b.nombre ||' ' ||b.apaterno ||' ' ||b.amaterno nombre , e.valor as parentesco, b.email, b.idbeneficiario FROM tblSolicitudes s JOIN tblbeneficiarios b ON b.idcliente = s.idCliente JOIN dicparentescos p ON b.idparentesco  = p.idparentesco left join dicequivalencias e on e.idemisorcredito = 6 and e.idcampo = 1095 and e.idregistro = p.idparentesco WHERE s.idremesaexport = {idRemesa} ORDER BY s.folio, b.idbeneficiario";
	public static final String GET_IDSLAYOUT_BY_IDREMSAEXPORT = "SELECT distinct r.idlayout,l.idsftp,re.remesaExport,l.encabezado,l.pieDePagina  FROM tblremesasexportsolicitudes r join diclayouts l on l.idlayout = r.idlayout join tblRemesasExport re on re.idRemesaExport = r.idRemesaExport where r.idremesaexport  = {idRemesaExport}";
	public static final String GET_FILE_NAME_BY_IDLAYOUT = "SELECT exportengine.getfilenamebylayout({idLayOut}) name from dual";
	public static final String UPDATE_NAME_REMESAEXPORT =  "UPDATE tblremesasExport set remesaExport ={name} where idRemesaExport = {idRemesaExport}";
	public static final String INSERT_RECORD_CALL = "insert into tblregistrosllamadas (idregistrollamadas,folio,idexternosolicitud,telefonocontacto,idllamada,gradoenojo,calificacion,etiquetagrabacion,fechallamada,fecharegistro) values  ({idRegistroLlamada}, {folio}, {folioFur}, {telefonoContacto}, {idLlamada}, {gradoEnojo}, {calificacion}, {etiquetaGrabacion}, TO_TIMESTAMP({fechaLlamada},'dd/mm/yyyy HH24:mi:ss'), sysdate)";
	public static final String INSERT_LOG_WS = "insert into TBLLOGWEBSERVICES (IDLOGWEBSERVICE, IDWEBSERVICE, XMLENTRADA, XMLSALIDA, FECHAEVENTO, FOLIO, FECHAINICIOTRANSACCION, FECHAFINTRANSACCION) values (SECIDLOGWEBSERVICES.nextVal, 21, {xml}, {xmlsalida}, SysTimeStamp, {folio}, SysTimeStamp, SysTimeStamp)";
	public static final String GET_MAX_FOLIO = "select max(folio) as FOLIO from tblsolicitudes where idexternosolicitud = {folioFur}";
	public static final String GET_SEC_NEXT = "select SECIDREGISTROLLAMADAS.NextVal as ID from dual";
	public static final String UPDATE_FOLIO_REGISTROLLAMADA = "update tblsolicitudes set idregistrollamadas = {idRegistroLlamada} where folio = {folio} and  idexternosolicitud = {folioFur}";
	public static final String GET_RUTA_ADJUNTA_REPORTE = "select ar.ruta, ar.nombrearchivoadjunto from dicreportes r left join tbladjuntosreporte ar on (ar.idreporte = r.idreporte) where r.idreporte = {idReporte} ";
	public static final String GET_NUMERO_POLIZA = "select idExternoSolicitud from tblPolizas where folio = {folio}";
	public static final String GET_WS_DATA = "Select url,action,usuario,contrasenia from dicwebservices where idwebservice = {idWebService}";
	//OpenPay
	public static final String GET_OPENPAY_CHARGE_DATA = "select s.folio, case when co.folio is null then c.nombre else co.nombre end as name, case when co.folio is null then c.apaterno ||' '||c.amaterno else co.apaterno ||' '||co.amaterno end as lastName, c.telefonocelular  as phoneNumber, c.email, tdc.nombre||' '||tdc.apaterno||' '||tdc.amaterno holderName, GPENGINE.DecryptData(s.folio,tdc.numerotarjeta)  as cardNumber, GPENGINE.DecryptData(s.folio,tdc.mesvencimiento) as expirationMonth, GPENGINE.DecryptData(s.folio,tdc.anovencimiento) as expirationYear, GPENGINE.DecryptData(s.folio,tdc.claveseguridad) as cvv2, To_Char(Round( (p.precioproducto * cfg.iva ) + p.precioproducto, 2), 'FM999999999999.00') amount from tblSolicitudes s join tblclientes c on c.idCliente = s.idCliente join tblclientetdc tdc on tdc.idCliente = c.idCLiente and tdc.idClienteTdc = {idClienteTdc} join dicProductos p on p.idProducto = s.idproducto join tblcfgsistema cfg on cfg.idcfgsistema = 1 left join tblContratante co on co.folio = s.folio where s.folio = {folio}";
	public static final String GET_WS_DATA_CONSUME_CHARGE = "select url,usuario as llave,llaveencriptar as id,action from dicwebservices where idwebservice = {idWebService}";
	public static final String GET_IDLODWEBSERVICE = "SELECT SECIDLOGWEBSERVICES.nextval idlogwebservice FROM DUAL";
	public static final String INSERT_LOG_WS_GENERIC = "insert into TBLLOGWEBSERVICES (IDLOGWEBSERVICE, IDWEBSERVICE, XMLENTRADA, XMLSALIDA, FECHAEVENTO, FOLIO, FECHAINICIOTRANSACCION, FECHAFINTRANSACCION) values ({idLogWebService}, {idWebService}, {xmlEntrada}, {xmlsalida}, SysTimeStamp, {folio}, to_date({fechaInicioTransaccion},'dd/mm/yyyy HH24:mi:ss'), SysTimeStamp)";
	public static final String MAKEPAYMENT_LUCI = "SELECT BillEngine.procesaRespuestaBanwire({notificacion}) res from dual";	
	//BandWire
	public static final String GET_BANDWIRE_CHARGE_DATA = "SELECT s.folio, c.email,  TRANSLATE(TRIM(tdc.nombre ||' ' ||tdc.apaterno ||' '||tdc.amaterno),'ÁÉÍÓÚÑ','AEIOUN') name, GPENGINE.DecryptData(s.folio,tdc.numerotarjeta)  AS cardNumber, GPENGINE.DecryptData(s.folio,tdc.mesvencimiento) AS exp_month, GPENGINE.DecryptData(s.folio,tdc.anovencimiento) AS exp_year, Nvl(GPENGINE.DecryptData(s.folio,tdc.claveseguridad),'000') AS cvv, TO_CHAR(ROUND( (p.precioproducto * cfg.iva ) + p.precioproducto, 2), 'FM999999999999.00') amount, d.cpostal  as postaL_code,  TRANSLATE(TRIM(d.calle ||' '||d.noExterior||(case when d.noInterior is not null then ' Int.:'||d.noInterior else '' end )||' Col.:'||d.colonia ),'ÁÉÍÓÚÑ','AEIOUN')as address, to_char(sysdate,'yyyy-mm-dd') as fechaStart FROM tblSolicitudes s JOIN tblclientes c ON c.idCliente = s.idCliente JOIN tblclientetdc tdc ON tdc.idCliente     = c.idCLiente AND tdc.idClienteTdc = {idClienteTdc} JOIN dicProductos p ON p.idProducto = s.idproducto JOIN tblcfgsistema cfg ON cfg.idcfgsistema = 1 join tbldomicilios d on d.idCliente = s.idcliente WHERE s.folio = {folio}";
	//Respuetas SMSMasivos
	public static final String INSERT_TBLLOGRESPUESTASSMS = "insert into TBLLOGRESPUESTASSMS (IDLOGRESSPUESTASMS,FOLIO,REspuesta,fechaREspuesta,fechaRegistro, idProveedorSMS)  values (secidlOGRESPUESTASSMS.nextVal,{folio},{respuesta},to_date({fechaRespuesta},'YYYYMMDDHH24miss'),sysdate, {idProveedorSms})";
	public static final String GET_TOKENPUSHAPP = "select u.TOKENPUSHAPP from TBLSOLICITUDESMENSAJERIAS sm  join tblUsuarios u on u.idUsuario = sm.idUsuarioMensajero where sm.folio = {folio}";
	public static final String UPDATE_CONFIRMACION_RECOLECCION = "Update TBLSOLICITUDESMENSAJERIASAPP set confirmaRecoleccion  = {confirmaRecoleccion},fechaConfirmaRecoleccion = sysdate where folio = {folio}";
	//Maps
	public static final String GET_GOOGLE_MAPS_KEY = "SELECT GOOGLEMAPSKEY FROM TBLCFGSISTEMA";
	//yopter
	public static final String INSERT_HISTORIA_SOLICITUD="INSERT INTO TBLHISTORIASOLICITUDES(FOLIO,IDESTADOSOLICITUD,IDEVENTOHISTORICO,IDUSUARIORESPONSABLE,FECHAEVENTO,OBSERVACIONES,IDTBLHISTORIASOLICITUD) select folio,idestadosolicitud,148,1,sysdate,'Confirmacion de pago',SECIDTBLHISTORIASOLICITUD.NEXTVAL from tblsolicitudes where folio={folio} ";
	public static final String INSERT_HISTORIA_SOLICITUD_MINIMA="insert into tblhistoriasolicitudes (folio,idEstadoSolicitud,fechaEvento,idUsuarioResponsable,idEventoHistorico,observaciones,idProceso) values ({folio},(select idEstadoSolicitud from tblSolicitudes where folio = {folio}),sysdate,{idUsuarioResponsable},{idEventoHistorico},{observaciones},{idProceso})";

	//Facturas
	public static final String INSERT_TBLSOLICITUDESFACTURAS = "INSERT INTO TBLSOLICITUDESFACTURAS (IDSOLICITUDFACTURA,FOLIO,NOCERTIFICADO,UUID,FECHATIMBRADO,RFCPROVCERTIF,SELLOCDF,NOCERTIFICADOSAT,SELLOSAT,CADENAORIGTDF,CADENAQR,XMLBASE64,PDF) VALUES (SECIDSOLICITUDFACTURA.NEXTVAL,{folio},{NoCertificado},{UUID},to_Date({FechaTimbrado},'dd/mm/yyyy HH24:mi:ss'),{RfcProvCertif},{SelloCFD},{NoCertificadoSAT},{SelloSAT},{CadenaOrigTFD},{CadenaQR},{XmlBase64},{PDF})" ;
	public static final String GET_DATOS_PARA_FACTURAR  = "select s.folio,c.rfc,initCap(c.razonSocial) razonSocial ,initCap(p.producto) producto, p.idProducto,c.requiereFactura, c.idFormaPago, P.Precioproducto , Sis.Iva, Anx.Nosucursal,case when c.requiereFactura = 'S' then c.emailfacturacion else  c.emailContacto end email from tblComercios c join tblsolicitudes s on s.folio = c.folio join tblcfgSistema sis on sis.idcfgSistema =  1 join dicProductos p on p.idProducto = s.idProducto join Tblanexossolicitud anx on anx.folio = s.folio where s.folio = {folio}";
	public static final String GET_ORDEN_DOCUMENTO = "select decode(max(orden),null,0,max(orden)) orden from tblSolicitudesDocumentos where folio = {folio} and Idtipodocumento = {idTipoDocumento}";
	public static final String GET_POSFIJO_DOCUMENTO = "select posfijo from Dictiposdocumentos where Idtipodocumentos = {idTipoDocumento} " ;
	public static final String INSERT_TBLSOLICITUDESDOCUMENTOS = "insert into tblsolicitudesDocumentos (folio, idusuario, latitud, longitud, fechaevento, orden, geohash, calificacionimagen, comentariosimagen,idtipodocumento,extension) values ({folio}, {idUsuario}, {latitud}, {longitud}, sysdate, {orden}, (select TOOLSENGINE.toGeoHash(to_char({latitud}),to_char({longitud}),12) from dual), null, null,{idTipoDocumento},{extension}) ";
    public static final String GET_DATA_FOR_EMAIL = "select nm.asunto,sm.host,sm.puerto,sm.login,nm.email,GPEngine.DecryptPassServerEmail(sm.idservidoremail) as password,sc.idScript from dicnotificacionesemail nm  join dicservidoresemail sm on sm.idservidoremail = nm.idservidoremail join dicScripts sc on sc.idscript = nm.idscript where nm.idnotificacionemail = {idNotificacionEmail}";
	public static final String GET_SECFACTURASYOPTER = "select SECFACTURASYOPTER.nextval sec from dual";

	public static final String GET_BASIC_DATA_WS = "select w.idwebservice IDWEBSERVICE,w.url url,w.metodo metodo,w.contrasenia,w.usuario,w.llaveEncriptar from dicwebservices w where w.IDWEBSERVICE={idWebService}";
	public static final String GET_ELEMENTS_WS = "select nombre , valor from tblwebserviceelementos where idwebservice = {idWebService} and tipo = {tipo} and Activo = 'S'";

	public static final String GET_DATOS_EXITUS ="select s.folio,d.calle,nvl(d.NOINTERIOR,' ') NOINTERIOR,nvl(d.NOEXTERIOR,' ') NOEXTERIOR , d.CPOSTAL , d.colonia, e.estado, m.municipio, DECODE(c.amaterno, null,  ' ', c.amaterno) as AMATERNO, c.nombre, c.apaterno, c.rfc, DECODE(d.telefono, null,  ' ', d.telefono) as TELEFONO, DECODE(c.telefonocelular, null,  ' ', c.telefonocelular) as TELEFONOCELULAR from tblsolicitudes s join diccampanas cam on (cam.idcampana = s.idcampana and cam.idemisorcredito = 17) join tblclientes c on (c.idcliente = s.idcliente) join tbldomicilios d on (d.idcliente = s.idcliente) join dicmunicipios m on (m.idmunicipio = d.idmunicipio) join dicestados e on (e.idestado = m.idestado) where s.Fechadecision is not null and c.fechanacimiento is not null and add_months(c.fechanacimiento,600) <= TRUNC(sysdate) and s.Fechadecision Between to_date(to_char(sysdate, 'DD/MM/YYYY')||'00:00:00' ,'DD/MM/YYYY HH24:mi:ss') and to_date(to_char(sysdate, 'DD/MM/YYYY')||'23:59:59' ,'DD/MM/YYYY HH24:mi:ss') order by 1 asc";

	//imagenes amazon
	//produccion
	public static final String GET_KEY_IMAGENES="select distinct s.folio, m.folioMensajeria,s.folio||'_'||td.posfijo||d.orden key,to_char(d.fechaevento,'yyyymmdd') fecha,replace(translate(initcap(dc.campana), 'áéíóúÁÉÍÓÚ', 'aeiouAEIOU'),' ','_') campana from tblSolicitudes s join tblsolicitudesmensajerias m on m.folio = s.folio join tblSolicitudesDocumentos d on d.folio = s.folio join dictiposdocumentos td on td.idtipodocumentos = d.idtipodocumento join diccampanas dc on dc.idcampana=s.idcampana where s.idCampana = {idCampana} and d.fechaevento BETWEEN to_date( {fechaInicio} ||'00:00:00' ,'DD/MM/YYYY HH24:mi:ss') and to_date( {fechaFin}||'23:59:59' ,'DD/MM/YYYY HH24:mi:ss')  ";
	//desarrollo
	//public static final String GET_KEY_IMAGENES="select distinct s.folio, m.folioMensajeria,s.folio||'_'||td.posfijo||d.orden key,to_char(d.fechaevento,'yyyymmdd') fecha from tblSolicitudes s join tblsolicitudesmensajerias m on m.folio = s.folio join tblSolicitudesDocumentos d on d.folio = s.folio join dictiposdocumentos td on td.idtipodocumentos = d.idtipodocumento where s.idCampana = {idCampana} and d.fechaevento BETWEEN to_date( {fechaInicio} ||'00:00' ,'DD/MM/YYYY HH24:mi') and to_date( {fechaFin} ||'23:59' ,'DD/MM/YYYY HH24:mi')  ";
	public static final String GET_BUCKET_PARAMS="select usuario, contrasenia, LLAVEENCRIPTAR from dicwebservices where idWebService = {idWebService}";
	public static final String GET_FTP_PARAMS="select ip,usuario,contrasenia from DICSFTPS where IDSFTP={idSftps}";

	//grabaciones
	public static final String GET_DATA_ID_LLAMADA="select s.folio,s.idexternosolicitud,tc.IPTELEFONIA ,tc.IDEXTERNOTELEFONIA ,tl.IDLLAMADA,(case when s.IDESTADOSOLICITUD in (3,6) then s.folio||'_'||tl.TYPINGCODE else case when s.IDESTADOSOLICITUD in (2) then s.idexternosolicitud else s.folio||'_'||tl.TYPINGCODE end end) newname,(case when s.IDESTADOSOLICITUD in (3,6) then trim(EXTRACT(YEAR FROM tl.fechallamada))||'/'||trim(EXTRACT(MONTH FROM tl.fechallamada))||'/RECHAZADAS' else case when s.IDESTADOSOLICITUD in (2) then trim(EXTRACT(YEAR FROM tl.fechallamada))||'/'||trim(EXTRACT(MONTH FROM tl.fechallamada))||'/APROBADAS' else trim(EXTRACT(YEAR FROM tl.fechallamada))||'/'||trim(EXTRACT(MONTH FROM tl.fechallamada))||'/ENTRAMITE' end end) RUTADESTINO,s.idestadosolicitud,tl.TYPINGCODE,tl.iduser  from bckTELEFONIAREPREGLLAMADAS@DBTELLUCI tl join TBLSOLICITUDES s on tl.FOLIO=s.FOLIO join TBLTELEFONIACAMPANACALLCENTER tc on tc.IDPROVEEDOR=s.IDPROVEEDOR and s.IDCAMPANA=tc.IDCAMPANA and tc.ACTIVO='S' where tl.idllamada ={idLlamada} and s.idestadosolicitud in (select regexp_substr({idEstadoSolicitud},'[^,]+', 1, level) ids from dual connect by regexp_substr({idEstadoSolicitud}, '[^,]+', 1, level) is not null )";
	public static final String INSERT_TBLGRABACIONES="insert into tblgrabaciones(fecha,registro,archivo,folio,idexternosolicitud,idgrabacion,rutaarchivo,rutaArchivoOriginal,idLlamada,codigoTipificacion,iduser) values (sysdate,{registro},{registro},{folio},{idExternoSolicitud},secidtblgrabaciones.nextval,{rutaArchivo},{rutaArchivoOriginal},{idLlamada},{tipificacion},{iduser})";

	public static final String GET_ALL_PHONES_BY_IDTELEFONIA_PROVEEDOR = "select * from tmptelefonos ";
	public static final String INSERT_TBLLOGGRABACIONES="insert into tblloggrabaciones (idLogGrabaciones,rutaArchivoOrigen,rutaArchivoDestino,folio,fechaEvento,estatus,trazaError)values(SEC_IDLOGGRABACIONES.nextval,{rutaArchivoOrigen},{rutaArchivoDestino},{folio},sysdate,{estatus},{trazaError})";


	// VALIDACION PARA UN TELEFONO QUE EXISTA EN COFETEL
	public static final String IS_TELEPHONE_VALID_IN_COFETEL = "select count(*) res from tblcofetel where {telefono} between serieinicio and seriefinal";


	// CONSULTA INFO CLIENTE
	public static final String GET_ID_LOG_WS = "Select SECIDLOGWEBSERVICES.nextVal IDLOGWEBSERVICE from dual ";
	public static final String INSERT_LOG_WS_CLIENTINFO = "Insert into tblLogWebServices (IDLOGWEBSERVICE, IDWEBSERVICE, XMLENTRADA, FECHAEVENTO, FECHAINICIOTRANSACCION) values ({idLogWebService}, 106, {jsonEntrada}, SysTimeStamp, SysTimeStamp) ";
	public static final String IS_VALID_USER = "Select GPEngine.GetUserID((Select GPEngine.DecryptData((select seedCr4 from tblCfgSistema), {user}) From Dual), (Select GPEngine.DecryptData((select seedCr4 from tblCfgSistema), {password}) From Dual)) idUsuario From Dual";
	public static final String UPDATE_LOG_GENERIC_WS = "Update tblLogWebServices SET XMLSALIDA = {jsonSalida}, FECHAFINTRANSACCION = SysTimeStamp where idLogWebService = {idLogWebService} ";
	public static final String UPDATE_LOG_WS = "Update tblLogWebServices SET XMLSALIDA = {jsonSalida}, FOLIO = {folio}, FECHAFINTRANSACCION = SysTimeStamp where idLogWebService = {idLogWebService} ";
}